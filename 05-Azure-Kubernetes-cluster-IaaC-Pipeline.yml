
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Kubernetes Cluster terraform Azure!
  displayName: 'Run a one-line script'
- task: DownloadSecureFile@1
  name: publickkey
  inputs:
    secureFile: 'azure_rsastore.pub'

- task: TerraformCLI@2
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    # commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickkey.securefilepath)'
    backendType: 'azurerm'
    backendServiceArm: 'AzureRMConnection'
    backendAzureRmSubscriptionId: '984093d0-49b1-47de-8517-f91d9a8d5b98'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'terraform-backend-rg'
    backendAzureRmResourceGroupLocation: 'East US'
    backendAzureRmStorageAccountName: 'terrastorgopi'
    backendAzureRmContainerName: 'terracontainer'
    backendAzureRmKey: 'kubernetes-dev.tfstate'

    
- task: TerraformCLI@2
  inputs:
    command: 'apply'
    environmentServiceName: 'AzureRMConnection'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickkey.securefilepath)'

    