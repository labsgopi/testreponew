# stage 1
# Build docker Image

# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
trigger:
- main
resources:
- repo: self
variables:
  tag: 32 

#'$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    # - task: Docker@2
    #   inputs:
    #     containerRegistry: 'dockergopi'
    #     repository: 'labsgopi/CurrencyExchange'
    #     command: 'buildAndPush'
    #     Dockerfile: '**/Dockerfile'
    #     tags: '$(tag)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '${System.Default.Working.Directory}'
        Contents: '**/*.yaml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
# stage 1
# Publish K8S configuration files
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'manifests'
        publishLocation: 'Container'

# stage 2
# Download the k8s configuration file

- stage: Deploy
  displayName: Deploy image
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        itemPattern: '**/*.yaml'
        targetPath: '$(Systems.ArtifactsDirectory)'
        
# Deploy to K8S cluster with the Docker image in stage 1

    - task: KubernetesManifest@1
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'kubernetes-service-connection'
        namespace: 'default'
        manifests: '$(Systems.ArtifactsDirectory)/configuration/kubernetes/deployment.yaml'
        containers: 'in28min/currency-exchange-devops:$(tag)'
      